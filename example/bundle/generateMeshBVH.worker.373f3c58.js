var e,r,t,o,i,n;r={},t={},null==(o=(e=globalThis).parcelRequire5b70)&&((o=function(e){if(e in r)return r[e].exports;if(e in t){var o=t[e];delete t[e];var i={id:e,exports:{}};return r[e]=i,o.call(i.exports,i,i.exports),i.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,r){t[e]=r},e.parcelRequire5b70=o),o.register,importScripts("./generateMeshBVH.worker.cd4b9fc6.js"),i=o("e06gU"),n=o("i1Cyt"),onmessage=({data:e})=>{let r=performance.now(),{index:t,position:o,options:s}=e;try{let e=new i.BufferGeometry;if(e.setAttribute("position",new i.BufferAttribute(o,3,!1)),t&&e.setIndex(new i.BufferAttribute(t,1,!1)),s.includedProgressCallback&&(s.onProgress=function(e){e=Math.min(e,1);let t=performance.now();t-r>=10&&1!==e&&(postMessage({error:null,serialized:null,position:null,progress:e}),r=t)}),s.groups){let r=s.groups;for(let t in r){let o=r[t];e.addGroup(o.start,o.count,o.materialIndex)}}let l=new n.MeshBVH(e,s),f=(0,n.MeshBVH).serialize(l,{copyIndexBuffer:!1}),u=[o.buffer,...f.roots];f.index&&u.push(f.index.buffer),u=u.filter(e=>"undefined"==typeof SharedArrayBuffer||!(e instanceof SharedArrayBuffer)),l._indirectBuffer&&u.push(f.indirectBuffer.buffer),postMessage({error:null,serialized:f,position:o,progress:1},u)}catch(e){postMessage({error:e,serialized:null,position:null,progress:1})}};
//# sourceMappingURL=generateMeshBVH.worker.373f3c58.js.map
